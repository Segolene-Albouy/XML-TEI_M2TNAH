<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:lang="en"
      xmlns:s="http://purl.oclc.org/dsdl/schematron"
      xmlns:rng="http://relaxng.org/ns/structure/1.0">
      <teiHeader>
            <fileDesc>
                  <titleStmt>
                        <title>Sonnet d'automne</title>
                        <author>Charles Baudelaire</author>
                  </titleStmt>
                  <publicationStmt>
                        <p>Encodage par moi-même</p>
                  </publicationStmt>
                  <sourceDesc>
                        <p>Provenance de Wikisource</p>
                  </sourceDesc>
            </fileDesc>
      </teiHeader>
      <text>
            <body>
                  <div1>
                        <head>Documentation de l'encodage</head>
                        <p>Blablabla</p>
                  </div1>
                  <div1>
                        <head>Règles de validation</head>
                        <schemaSpec ident="oddbyexample" start="TEI ">
                        <moduleRef key="tei"/>
                        <moduleRef key="textstructure" include="TEI text body div"/>
                        <moduleRef key="core" include="p date head author title publisher pubPlace bibl l lg"/>
                        <moduleRef key="header" include="teiHeader fileDesc titleStmt editionStmt edition publicationStmt sourceDesc profileDesc creation langUsage language"/>

                        <elementSpec ident="lg" mode="change">
                              <gloss xml:lang="fr">Groupement de vers</gloss>
                              <desc>Sert à structurer un poème</desc>

                              <!-- Un groupement de vers doit contenir des vers -->
                              <constraintSpec scheme="schematron" ident="verse">
                                    <constraint>
                                          <s:assert test="count(.//tei:l) > 1">
                                                Un lg doit contenir parmi ses descendants au moins deux l
                                          </s:assert>
                                    </constraint>
                              </constraintSpec>
                              
                              <!-- Un lg[@type="sonnet"] doit commencer par un titre -->
                              <constraintSpec scheme="schematron" ident="title">
                                    <constraint>
                                          <s:ns prefix="tei" uri="http://www.tei-c.org/ns/1.0"/>
                                          <s:rule context="tei:lg[@type='sonnet']">
                                                <s:assert test="*[1]=tei:head">
                                                      Le premier élément d'un lg[@type='sonnet'] doit être head
                                                </s:assert>
                                          </s:rule>
                                    </constraint>
                              </constraintSpec>
                              
                              <!-- Un sonnet ne peut contenir que 3 groupements de vers : 2 quatrains, un sizain -->
                              <constraintSpec scheme="schematron" ident="sonnet">
                                    <constraint xmlns:tei="http://www.tei-c.org/ns/1.0">
                                          <s:rule context="tei:lg[@type='sonnet']">
                                                <s:assert test="count(tei:lg)=3 and count(tei:lg[@type='quatrain'])=2 and count(tei:lg[@type='sizain'])=1">
                                                      Les lg[@type='sonnet'] doivent contenir trois lg, dont deux de @type="quatrain" et un de @type="sizain"
                                                </s:assert>
                                          </s:rule>
                                    </constraint>
                              </constraintSpec>
                        </elementSpec>
                              
                        <elementSpec ident="l" mode="change">
                              <!-- Les vers doivent avoir un attribut @n dont la valeur est supérieure de 1 au vers précédent -->
                              <constraintSpec scheme="schematron" ident="numerotation">
                                    <constraint>
                                          <s:ns prefix="tei" uri="http://www.tei-c.org/ns/1.0"/>
                                          <s:rule context="tei:l[position() != 1]">
                                                <s:assert test="number(@n) = number(preceding-sibling::tei:l[1]/@n) + 1">
                                                      La numérotation doit être continue.
                                                </s:assert>
                                          </s:rule>
                                    </constraint>
                              </constraintSpec>
                              
                              <attList>
                                    <!-- L'attribut @n est requis et doit contenir un nombre -->
                                    <attDef ident="n" mode="change" usage="req">
                                          <desc xml:lang="fr">
                                                L'attribut @n est obligatoire et doit contenir un entier positif 
                                          </desc>
                                          <datatype minOccurs="1" maxOccurs="1">
                                                <dataRef key="teidata.count"/>
                                          </datatype>
                                    </attDef>
                              </attList>
                        </elementSpec>

                        <classRef key="model.physDescPart"/>
                        <classRef key="model.persNamePart"/>
                        <classRef key="model.entryLike"/>
                        <classRef key="model.formPart"/>
                        <classRef key="model.gramPart"/>
                        <classRef key="model.morphLike"/>
                        <classRef key="model.ptrLike.form"/>
                        <classRef key="att.combinable"/>
                        <classRef key="att.identified"/>
                        <classRef key="model.contentPart"/>
                  </schemaSpec>
                  </div1>
                  
            </body>
      </text>
</TEI>
